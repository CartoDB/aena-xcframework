{"variants":[{"traits":[{"interfaceLanguage":"swift"}],"paths":["\/documentation\/indoorsdk\/indoormodule\/getuserposition()"]},{"traits":[{"interfaceLanguage":"occ"}],"paths":["\/documentation\/indoorsdk\/indoormodule\/getuserposition()"]}],"kind":"symbol","abstract":[{"type":"text","text":"User last position"}],"sections":[],"hierarchy":{"paths":[["doc:\/\/com.geographica.IndoorSDK\/documentation\/IndoorSDK","doc:\/\/com.geographica.IndoorSDK\/documentation\/IndoorSDK\/IndoorModule"]]},"seeAlsoSections":[{"identifiers":["doc:\/\/com.geographica.IndoorSDK\/documentation\/IndoorSDK\/IndoorModule\/PositionKey","doc:\/\/com.geographica.IndoorSDK\/documentation\/IndoorSDK\/IndoorModule\/setFlight(_:)","doc:\/\/com.geographica.IndoorSDK\/documentation\/IndoorSDK\/IndoorModule\/loadCategory(_:inAirport:inNavController:action:)","doc:\/\/com.geographica.IndoorSDK\/documentation\/IndoorSDK\/IndoorModule\/airportIsCached(_:)","doc:\/\/com.geographica.IndoorSDK\/documentation\/IndoorSDK\/IndoorModule\/loadSaveParking(inAirport:inNavController:action:)"],"generated":true,"anchor":"Utils","title":"Utils"}],"schemaVersion":{"patch":0,"major":0,"minor":3},"identifier":{"url":"doc:\/\/com.geographica.IndoorSDK\/documentation\/IndoorSDK\/IndoorModule\/getUserPosition()","interfaceLanguage":"swift"},"metadata":{"role":"symbol","roleHeading":"Instance Method","symbolKind":"method","modules":[{"name":"IndoorSDK"}],"title":"getUserPosition()","externalID":"c:@M@IndoorSDK@objc(cs)IndoorModule(im)getUserPosition","navigatorTitle":[{"kind":"identifier","text":"getUserPosition"}],"fragments":[{"kind":"keyword","text":"func"},{"text":" ","kind":"text"},{"text":"getUserPosition","kind":"identifier"},{"text":"() -> [","kind":"text"},{"kind":"typeIdentifier","text":"String","preciseIdentifier":"s:SS"},{"text":" : ","kind":"text"},{"kind":"keyword","text":"Any"},{"kind":"text","text":"]?"}]},"primaryContentSections":[{"declarations":[{"tokens":[{"kind":"attribute","text":"@objc"},{"text":" ","kind":"text"},{"text":"func","kind":"keyword"},{"text":" ","kind":"text"},{"kind":"identifier","text":"getUserPosition"},{"kind":"text","text":"() -> ["},{"kind":"typeIdentifier","preciseIdentifier":"s:SS","text":"String"},{"text":" : ","kind":"text"},{"kind":"keyword","text":"Any"},{"text":"]?","kind":"text"}],"platforms":["iOS"],"languages":["swift"]}],"kind":"declarations"},{"kind":"content","content":[{"type":"heading","level":2,"text":"Return Value","anchor":"return-value"},{"type":"paragraph","inlineContent":[{"text":"If there is not any user valid position return nil, If there is position return a dictionary with the position info.","type":"text"}]}]},{"kind":"content","content":[{"text":"Discussion","anchor":"discussion","level":2,"type":"heading"},{"type":"paragraph","inlineContent":[{"type":"text","text":"If you have called start(), you should always have a position, but keep in framework gives you a position both when the user is inside or outside an airport."}]},{"content":[{"inlineContent":[{"type":"text","text":"You must to call start() before this method."}],"type":"paragraph"}],"type":"aside","name":"Important","style":"important"},{"type":"heading","anchor":"Swift-keys","level":2,"text":"Swift keys"},{"type":"paragraph","inlineContent":[{"text":".","type":"text"},{"type":"text","text":" "},{"type":"text","text":"The Keys of the dictionary are defined inside the "},{"isActive":true,"type":"reference","identifier":"doc:\/\/com.geographica.IndoorSDK\/documentation\/IndoorSDK\/IndoorModule\/PositionKey"}]},{"anchor":"ObjC-keys","level":2,"type":"heading","text":"ObjC keys"},{"type":"codeListing","syntax":null,"code":["The Keys of the dictionary are defined as global constants, \"IndoorSDKPositionKey...\""]}]}],"references":{"doc://com.geographica.IndoorSDK/documentation/IndoorSDK/IndoorModule/loadSaveParking(inAirport:inNavController:action:)":{"title":"loadSaveParking(inAirport:inNavController:action:)","role":"symbol","abstract":[{"type":"text","text":"Open the save carpark screen inside the provide navigation controller."}],"identifier":"doc:\/\/com.geographica.IndoorSDK\/documentation\/IndoorSDK\/IndoorModule\/loadSaveParking(inAirport:inNavController:action:)","url":"\/documentation\/indoorsdk\/indoormodule\/loadsaveparking(inairport:innavcontroller:action:)","type":"topic","kind":"symbol","fragments":[{"text":"func","kind":"keyword"},{"text":" ","kind":"text"},{"kind":"identifier","text":"loadSaveParking"},{"text":"(","kind":"text"},{"kind":"externalParam","text":"inAirport"},{"kind":"text","text":": "},{"text":"String","kind":"typeIdentifier","preciseIdentifier":"s:SS"},{"kind":"text","text":", "},{"text":"inNavController","kind":"externalParam"},{"kind":"text","text":": "},{"preciseIdentifier":"c:objc(cs)UINavigationController","kind":"typeIdentifier","text":"UINavigationController"},{"text":", ","kind":"text"},{"text":"action","kind":"externalParam"},{"kind":"text","text":": ((["},{"text":"String","kind":"typeIdentifier","preciseIdentifier":"s:SS"},{"text":"]) -> ","kind":"text"},{"kind":"typeIdentifier","text":"Void","preciseIdentifier":"s:s4Voida"},{"text":")?) ","kind":"text"},{"text":"throws","kind":"keyword"}],"navigatorTitle":[{"text":"loadSaveParkingInAirport:inNavController:error:action:","kind":"identifier"}]},"doc://com.geographica.IndoorSDK/documentation/IndoorSDK/IndoorModule/getUserPosition()":{"type":"topic","navigatorTitle":[{"text":"getUserPosition","kind":"identifier"}],"abstract":[{"type":"text","text":"User last position"}],"kind":"symbol","title":"getUserPosition()","url":"\/documentation\/indoorsdk\/indoormodule\/getuserposition()","fragments":[{"text":"func","kind":"keyword"},{"text":" ","kind":"text"},{"kind":"identifier","text":"getUserPosition"},{"kind":"text","text":"() -> ["},{"kind":"typeIdentifier","preciseIdentifier":"s:SS","text":"String"},{"text":" : ","kind":"text"},{"kind":"keyword","text":"Any"},{"kind":"text","text":"]?"}],"identifier":"doc:\/\/com.geographica.IndoorSDK\/documentation\/IndoorSDK\/IndoorModule\/getUserPosition()","role":"symbol"},"doc://com.geographica.IndoorSDK/documentation/IndoorSDK/IndoorModule/setFlight(_:)":{"type":"topic","kind":"symbol","fragments":[{"kind":"keyword","text":"func"},{"text":" ","kind":"text"},{"kind":"identifier","text":"setFlight"},{"kind":"text","text":"(["},{"preciseIdentifier":"s:SS","text":"String","kind":"typeIdentifier"},{"text":" : ","kind":"text"},{"kind":"keyword","text":"Any"},{"text":"]?) ","kind":"text"},{"text":"throws","kind":"keyword"}],"abstract":[{"text":"Manage the flight ticket in the SDK.","type":"text"}],"url":"\/documentation\/indoorsdk\/indoormodule\/setflight(_:)","identifier":"doc:\/\/com.geographica.IndoorSDK\/documentation\/IndoorSDK\/IndoorModule\/setFlight(_:)","title":"setFlight(_:)","role":"symbol","navigatorTitle":[{"kind":"identifier","text":"setFlight:error:"}]},"doc://com.geographica.IndoorSDK/documentation/IndoorSDK/IndoorModule/airportIsCached(_:)":{"url":"\/documentation\/indoorsdk\/indoormodule\/airportiscached(_:)","navigatorTitle":[{"kind":"identifier","text":"airportIsCached:"}],"fragments":[{"kind":"keyword","text":"func"},{"kind":"text","text":" "},{"text":"airportIsCached","kind":"identifier"},{"text":"(","kind":"text"},{"kind":"typeIdentifier","text":"String","preciseIdentifier":"s:SS"},{"kind":"text","text":") -> "},{"kind":"typeIdentifier","text":"Bool","preciseIdentifier":"s:Sb"}],"kind":"symbol","type":"topic","role":"symbol","abstract":[{"type":"text","text":"To ask if an airport is ready"}],"title":"airportIsCached(_:)","identifier":"doc:\/\/com.geographica.IndoorSDK\/documentation\/IndoorSDK\/IndoorModule\/airportIsCached(_:)"},"doc://com.geographica.IndoorSDK/documentation/IndoorSDK/IndoorModule":{"role":"symbol","abstract":[{"type":"text","text":"Main model class of IndoorSDK"}],"navigatorTitle":[{"text":"IndoorModule","kind":"identifier"}],"fragments":[{"text":"class","kind":"keyword"},{"text":" ","kind":"text"},{"text":"IndoorModule","kind":"identifier"}],"url":"\/documentation\/indoorsdk\/indoormodule","kind":"symbol","type":"topic","title":"IndoorModule","identifier":"doc:\/\/com.geographica.IndoorSDK\/documentation\/IndoorSDK\/IndoorModule"},"doc://com.geographica.IndoorSDK/documentation/IndoorSDK":{"identifier":"doc:\/\/com.geographica.IndoorSDK\/documentation\/IndoorSDK","title":"IndoorSDK","role":"collection","type":"topic","abstract":[{"type":"text","text":"Indoor Maping and navigation"}],"url":"\/documentation\/indoorsdk","kind":"symbol"},"doc://com.geographica.IndoorSDK/documentation/IndoorSDK/IndoorModule/PositionKey":{"url":"\/documentation\/indoorsdk\/indoormodule\/positionkey","kind":"symbol","title":"IndoorModule.PositionKey","type":"topic","identifier":"doc:\/\/com.geographica.IndoorSDK\/documentation\/IndoorSDK\/IndoorModule\/PositionKey","fragments":[{"text":"struct","kind":"keyword"},{"text":" ","kind":"text"},{"kind":"identifier","text":"PositionKey"}],"navigatorTitle":[{"text":"PositionKey","kind":"identifier"}],"abstract":[{"text":"Define the constanst keys of the position dictionary.","type":"text"}],"role":"symbol"},"doc://com.geographica.IndoorSDK/documentation/IndoorSDK/IndoorModule/loadCategory(_:inAirport:inNavController:action:)":{"abstract":[{"text":"It present the list of POIS in the requested category of an airport, inside the provide navigation controller.","type":"text"}],"url":"\/documentation\/indoorsdk\/indoormodule\/loadcategory(_:inairport:innavcontroller:action:)","navigatorTitle":[{"kind":"identifier","text":"loadCategory:inAirport:inNavController:error:action:"}],"type":"topic","kind":"symbol","identifier":"doc:\/\/com.geographica.IndoorSDK\/documentation\/IndoorSDK\/IndoorModule\/loadCategory(_:inAirport:inNavController:action:)","title":"loadCategory(_:inAirport:inNavController:action:)","role":"symbol","fragments":[{"text":"func","kind":"keyword"},{"text":" ","kind":"text"},{"kind":"identifier","text":"loadCategory"},{"text":"(","kind":"text"},{"text":"Int","kind":"typeIdentifier","preciseIdentifier":"s:Si"},{"kind":"text","text":", "},{"text":"inAirport","kind":"externalParam"},{"text":": ","kind":"text"},{"preciseIdentifier":"s:SS","kind":"typeIdentifier","text":"String"},{"kind":"text","text":", "},{"text":"inNavController","kind":"externalParam"},{"kind":"text","text":": "},{"text":"UINavigationController","kind":"typeIdentifier","preciseIdentifier":"c:objc(cs)UINavigationController"},{"kind":"text","text":", "},{"kind":"externalParam","text":"action"},{"text":": (([","kind":"text"},{"kind":"typeIdentifier","preciseIdentifier":"s:SS","text":"String"},{"text":"]) -> ","kind":"text"},{"text":"Void","kind":"typeIdentifier","preciseIdentifier":"s:s4Voida"},{"text":")?) ","kind":"text"},{"text":"throws","kind":"keyword"}]}},"variantOverrides":[{"patch":[{"value":"occ","path":"\/identifier\/interfaceLanguage","op":"replace"},{"path":"\/metadata\/roleHeading","value":"Instance Method","op":"replace"},{"path":"\/metadata\/title","value":"getUserPosition","op":"replace"},{"op":"replace","value":"method","path":"\/metadata\/symbolKind"},{"op":"replace","path":"\/metadata\/fragments","value":[{"text":"- ","kind":"text"},{"text":"getUserPosition","kind":"identifier"}]},{"path":"\/topicSections","op":"add","value":null},{"op":"add","path":"\/relationshipsSections","value":null},{"path":"\/seeAlsoSections","value":[{"generated":true,"title":"Utils","identifiers":["doc:\/\/com.geographica.IndoorSDK\/documentation\/IndoorSDK\/IndoorModule\/setFlight(_:)","doc:\/\/com.geographica.IndoorSDK\/documentation\/IndoorSDK\/IndoorModule\/loadCategory(_:inAirport:inNavController:action:)","doc:\/\/com.geographica.IndoorSDK\/documentation\/IndoorSDK\/IndoorModule\/airportIsCached(_:)","doc:\/\/com.geographica.IndoorSDK\/documentation\/IndoorSDK\/IndoorModule\/loadSaveParking(inAirport:inNavController:action:)"],"anchor":"Utils"}],"op":"replace"},{"op":"replace","value":{"kind":"declarations","declarations":[{"tokens":[{"text":"- (","kind":"text"},{"kind":"typeIdentifier","preciseIdentifier":"c:Q$objc(cs)NSDictionary","text":"NSDictionary<NSString *,id>"},{"text":" *) ","kind":"text"},{"text":"getUserPosition","kind":"identifier"},{"text":";","kind":"text"}],"languages":["occ"],"platforms":["iOS"]}]},"path":"\/primaryContentSections\/0"},{"op":"replace","path":"\/primaryContentSections\/1","value":{"kind":"content","content":[{"type":"heading","level":2,"anchor":"return-value","text":"Return Value"},{"type":"paragraph","inlineContent":[{"type":"text","text":"If there is not any user valid position return nil, If there is position return a dictionary with the position info."}]}]}},{"op":"replace","value":"loadSaveParkingInAirport:inNavController:error:action:","path":"\/references\/doc:~1~1com.geographica.IndoorSDK~1documentation~1IndoorSDK~1IndoorModule~1loadSaveParking(inAirport:inNavController:action:)\/title"},{"path":"\/references\/doc:~1~1com.geographica.IndoorSDK~1documentation~1IndoorSDK~1IndoorModule~1loadSaveParking(inAirport:inNavController:action:)\/fragments","op":"replace","value":[{"text":"- ","kind":"text"},{"text":"loadSaveParkingInAirport:inNavController:error:action:","kind":"identifier"}]},{"op":"replace","value":"getUserPosition","path":"\/references\/doc:~1~1com.geographica.IndoorSDK~1documentation~1IndoorSDK~1IndoorModule~1getUserPosition()\/title"},{"path":"\/references\/doc:~1~1com.geographica.IndoorSDK~1documentation~1IndoorSDK~1IndoorModule~1getUserPosition()\/fragments","op":"replace","value":[{"kind":"text","text":"- "},{"kind":"identifier","text":"getUserPosition"}]},{"op":"replace","path":"\/references\/doc:~1~1com.geographica.IndoorSDK~1documentation~1IndoorSDK~1IndoorModule~1setFlight(_:)\/title","value":"setFlight:error:"},{"op":"replace","value":[{"text":"- ","kind":"text"},{"kind":"identifier","text":"setFlight:error:"}],"path":"\/references\/doc:~1~1com.geographica.IndoorSDK~1documentation~1IndoorSDK~1IndoorModule~1setFlight(_:)\/fragments"},{"path":"\/references\/doc:~1~1com.geographica.IndoorSDK~1documentation~1IndoorSDK~1IndoorModule~1airportIsCached(_:)\/title","op":"replace","value":"airportIsCached:"},{"path":"\/references\/doc:~1~1com.geographica.IndoorSDK~1documentation~1IndoorSDK~1IndoorModule~1airportIsCached(_:)\/fragments","value":[{"kind":"text","text":"- "},{"text":"airportIsCached:","kind":"identifier"}],"op":"replace"},{"op":"replace","path":"\/references\/doc:~1~1com.geographica.IndoorSDK~1documentation~1IndoorSDK~1IndoorModule\/title","value":"IndoorModule"},{"value":[{"kind":"identifier","text":"IndoorModule"}],"op":"replace","path":"\/references\/doc:~1~1com.geographica.IndoorSDK~1documentation~1IndoorSDK~1IndoorModule\/fragments"},{"value":[{"kind":"identifier","text":"IndoorModule"}],"path":"\/references\/doc:~1~1com.geographica.IndoorSDK~1documentation~1IndoorSDK~1IndoorModule\/navigatorTitle","op":"replace"},{"path":"\/references\/doc:~1~1com.geographica.IndoorSDK~1documentation~1IndoorSDK~1IndoorModule~1loadCategory(_:inAirport:inNavController:action:)\/title","op":"replace","value":"loadCategory:inAirport:inNavController:error:action:"},{"op":"replace","path":"\/references\/doc:~1~1com.geographica.IndoorSDK~1documentation~1IndoorSDK~1IndoorModule~1loadCategory(_:inAirport:inNavController:action:)\/fragments","value":[{"text":"- ","kind":"text"},{"text":"loadCategory:inAirport:inNavController:error:action:","kind":"identifier"}]}],"traits":[{"interfaceLanguage":"occ"}]}]}