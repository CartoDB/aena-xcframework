{"interfaceLanguages":{"occ":[{"children":[{"title":"Essentials","type":"groupMarker"},{"path":"\/documentation\/indoorsdk\/gettingstarted","title":"Getting started","type":"article"},{"path":"\/documentation\/indoorsdk\/shareposition","title":"Share Position","type":"article"},{"path":"\/documentation\/indoorsdk\/outdoornavigation","title":"Outdoor navigation","type":"article"},{"path":"\/documentation\/indoorsdk\/geofence","title":"Geofence","type":"article"},{"path":"\/documentation\/indoorsdk\/carpark","title":"Carpark","type":"article"},{"children":[{"title":"Main","type":"groupMarker"},{"path":"\/documentation\/indoorsdk\/indoormodule\/shared","title":"shared","type":"property"},{"path":"\/documentation\/indoorsdk\/indoormodule\/start(_:)","title":"start:","type":"method"},{"path":"\/documentation\/indoorsdk\/indoormodule\/requestairportsinfofromicaos(_:)","title":"requestAirportsInfoFromIcaos:","type":"method"},{"title":"Utils","type":"groupMarker"},{"path":"\/documentation\/indoorsdk\/indoormodule\/getuserposition()","title":"getUserPosition","type":"method"},{"path":"\/documentation\/indoorsdk\/indoormodule\/setflight(_:)","title":"setFlight:error:","type":"method"},{"path":"\/documentation\/indoorsdk\/indoormodule\/loadcategory(_:inairport:innavcontroller:action:)","title":"loadCategory:inAirport:inNavController:error:action:","type":"method"},{"path":"\/documentation\/indoorsdk\/indoormodule\/airportiscached(_:)","title":"airportIsCached:","type":"method"},{"path":"\/documentation\/indoorsdk\/indoormodule\/loadsaveparking(inairport:innavcontroller:action:)","title":"loadSaveParkingInAirport:inNavController:error:action:","type":"method"},{"title":"Deprecated","type":"groupMarker"},{"path":"\/documentation\/indoorsdk\/indoormodule\/action","title":"action","type":"property"},{"path":"\/documentation\/indoorsdk\/indoormodule\/getposition()","title":"getPosition","type":"method"},{"path":"\/documentation\/indoorsdk\/indoormodule\/setflightinfo(_:)","title":"setFlightInfo:","type":"method"},{"path":"\/documentation\/indoorsdk\/indoormodule\/setpmr(_:)","title":"setPMR:","type":"method"}],"path":"\/documentation\/indoorsdk\/indoormodule","title":"IndoorModule","type":"class"},{"children":[{"title":"Instance Methods","type":"groupMarker"},{"path":"\/documentation\/indoorsdk\/indoormapviewcontroller\/loadairport(icao:)","title":"loadAirportWithIcao:","type":"method"},{"path":"\/documentation\/indoorsdk\/indoormapviewcontroller\/loadpoi(idpoi:inairport:readyblock:)","title":"loadPoiWithIdPoi:inAirport:readyBlock:","type":"method"},{"path":"\/documentation\/indoorsdk\/indoormapviewcontroller\/openpoi(idpoi:)","title":"openPoiWithIdPoi:error:","type":"method"},{"title":"Override Methods","type":"groupMarker"},{"path":"\/documentation\/indoorsdk\/indoormapviewcontroller\/loadview()","title":"loadView","type":"method"},{"path":"\/documentation\/indoorsdk\/indoormapviewcontroller\/viewdidload()","title":"viewDidLoad","type":"method"},{"path":"\/documentation\/indoorsdk\/indoormapviewcontroller\/viewwillappear(_:)","title":"viewWillAppear:","type":"method"},{"path":"\/documentation\/indoorsdk\/indoormapviewcontroller\/viewdidappear(_:)","title":"viewDidAppear:","type":"method"},{"path":"\/documentation\/indoorsdk\/indoormapviewcontroller\/viewwilldisappear(_:)","title":"viewWillDisappear:","type":"method"},{"path":"\/documentation\/indoorsdk\/indoormapviewcontroller\/accessibilityperformescape()","title":"accessibilityPerformEscape","type":"method"},{"path":"\/documentation\/indoorsdk\/indoormapviewcontroller\/traitcollectiondidchange(_:)","title":"traitCollectionDidChange:","type":"method"},{"title":"Instance Methods","type":"groupMarker"},{"path":"\/documentation\/indoorsdk\/indoormapviewcontroller\/didmove(toparent:)","title":"didMoveToParentViewController:","type":"method"}],"path":"\/documentation\/indoorsdk\/indoormapviewcontroller","title":"IndoorMapViewController","type":"class"},{"title":"Variables","type":"groupMarker"},{"path":"\/documentation\/indoorsdk\/createflighterrordomain","title":"CreateFlightErrorDomain","type":"var"},{"path":"\/documentation\/indoorsdk\/indoorsdkpositionkeyaccuracy","title":"IndoorSDKPositionKeyAccuracy","type":"var"},{"path":"\/documentation\/indoorsdk\/indoorsdkpositionkeybearing","title":"IndoorSDKPositionKeyBearing","type":"var"},{"path":"\/documentation\/indoorsdk\/indoorsdkpositionkeybuildingid","title":"IndoorSDKPositionKeyBuildingId","type":"var"},{"path":"\/documentation\/indoorsdk\/indoorsdkpositionkeyfloorid","title":"IndoorSDKPositionKeyFloorId","type":"var"},{"path":"\/documentation\/indoorsdk\/indoorsdkpositionkeyisindoor","title":"IndoorSDKPositionKeyIsIndoor","type":"var"},{"path":"\/documentation\/indoorsdk\/indoorsdkpositionkeylatitude","title":"IndoorSDKPositionKeyLatitude","type":"var"},{"path":"\/documentation\/indoorsdk\/indoorsdkpositionkeylongitude","title":"IndoorSDKPositionKeyLongitude","type":"var"},{"path":"\/documentation\/indoorsdk\/opencategorylisterrordomain","title":"OpenCategoryListErrorDomain","type":"var"},{"path":"\/documentation\/indoorsdk\/openpoierrordomain","title":"OpenPoiErrorDomain","type":"var"},{"title":"Enumerations","type":"groupMarker"},{"children":[{"title":"Enumeration Cases","type":"groupMarker"},{"path":"\/documentation\/indoorsdk\/createflighterror\/airportdestiny","title":"CreateFlightErrorAirportDestiny","type":"case"},{"path":"\/documentation\/indoorsdk\/createflighterror\/airportorigin","title":"CreateFlightErrorAirportOrigin","type":"case"},{"path":"\/documentation\/indoorsdk\/createflighterror\/companycode","title":"CreateFlightErrorCompanyCode","type":"case"},{"path":"\/documentation\/indoorsdk\/createflighterror\/icaoairportdestiny","title":"CreateFlightErrorIcaoAirportDestiny","type":"case"},{"path":"\/documentation\/indoorsdk\/createflighterror\/icaoairportorigin","title":"CreateFlightErrorIcaoAirportOrigin","type":"case"},{"path":"\/documentation\/indoorsdk\/createflighterror\/nameairportdestiny","title":"CreateFlightErrorNameAirportDestiny","type":"case"},{"path":"\/documentation\/indoorsdk\/createflighterror\/nameairportorigin","title":"CreateFlightErrorNameAirportOrigin","type":"case"},{"path":"\/documentation\/indoorsdk\/createflighterror\/numberflight","title":"CreateFlightErrorNumberFlight","type":"case"},{"path":"\/documentation\/indoorsdk\/createflighterror\/state","title":"CreateFlightErrorState","type":"case"}],"path":"\/documentation\/indoorsdk\/createflighterror","title":"CreateFlightError","type":"enum"},{"children":[{"title":"Enumeration Cases","type":"groupMarker"},{"path":"\/documentation\/indoorsdk\/opencategorylisterror\/airportisnotready","title":"OpenCategoryListErrorAirportIsNotReady","type":"case"},{"path":"\/documentation\/indoorsdk\/opencategorylisterror\/categorydonotexist","title":"OpenCategoryListErrorCategoryDoNotExist","type":"case"}],"path":"\/documentation\/indoorsdk\/opencategorylisterror","title":"OpenCategoryListError","type":"enum"},{"children":[{"title":"Enumeration Cases","type":"groupMarker"},{"path":"\/documentation\/indoorsdk\/openpoierror\/poicantbereach","title":"OpenPoiErrorPoiCantBeReach","type":"case"},{"path":"\/documentation\/indoorsdk\/openpoierror\/poidontexist","title":"OpenPoiErrorPoiDontExist","type":"case"}],"path":"\/documentation\/indoorsdk\/openpoierror","title":"OpenPoiError","type":"enum"}],"path":"\/documentation\/indoorsdk","title":"IndoorSDK","type":"module"}],"swift":[{"children":[{"title":"Operators","type":"groupMarker"},{"path":"\/documentation\/indoorsdk\/carpark\/!=(_:_:)","title":"static func != (Self, Self) -> Bool","type":"op"}],"path":"\/documentation\/indoorsdk\/carpark\/equatable-implementations","title":"Equatable Implementations","type":"symbol"},{"children":[{"title":"Essentials","type":"groupMarker"},{"path":"\/documentation\/indoorsdk\/gettingstarted","title":"Getting started","type":"article"},{"path":"\/documentation\/indoorsdk\/shareposition","title":"Share Position","type":"article"},{"path":"\/documentation\/indoorsdk\/outdoornavigation","title":"Outdoor navigation","type":"article"},{"path":"\/documentation\/indoorsdk\/geofence","title":"Geofence","type":"article"},{"children":[{"title":"Initializers","type":"groupMarker"},{"path":"\/documentation\/indoorsdk\/carpark\/init(from:)","title":"init(from: Decoder) throws","type":"init"},{"title":"Instance Properties","type":"groupMarker"},{"path":"\/documentation\/indoorsdk\/carpark\/airportname","title":"let airportName: String","type":"property"},{"path":"\/documentation\/indoorsdk\/carpark\/buildingid","title":"let buildingId: Int","type":"property"},{"path":"\/documentation\/indoorsdk\/carpark\/createat","title":"let createAt: TimeInterval","type":"property"},{"path":"\/documentation\/indoorsdk\/carpark\/icao","title":"let icao: String","type":"property"},{"path":"\/documentation\/indoorsdk\/carpark\/lat","title":"let lat: Double","type":"property"},{"path":"\/documentation\/indoorsdk\/carpark\/levelid","title":"let levelId: Int","type":"property"},{"path":"\/documentation\/indoorsdk\/carpark\/lon","title":"let lon: Double","type":"property"},{"path":"\/documentation\/indoorsdk\/carpark\/notes","title":"let notes: String?","type":"property"},{"path":"\/documentation\/indoorsdk\/carpark\/parktext","title":"let parkText: String","type":"property"},{"title":"Type Properties","type":"groupMarker"},{"path":"\/documentation\/indoorsdk\/carpark\/deleted","title":"static let deleted: Notification.Name","type":"property"},{"path":"\/documentation\/indoorsdk\/carpark\/saved","title":"static let saved: Notification.Name","type":"property"},{"title":"Type Methods","type":"groupMarker"},{"path":"\/documentation\/indoorsdk\/carpark\/deletecarparksaved()","title":"static func deleteCarparkSaved()","type":"method"},{"path":"\/documentation\/indoorsdk\/carpark\/getsavedcarpark()","title":"static func getSavedCarPark() -> Carpark?","type":"method"}],"path":"\/documentation\/indoorsdk\/carpark","title":"Carpark","type":"article"},{"children":[{"title":"Main","type":"groupMarker"},{"path":"\/documentation\/indoorsdk\/indoormodule\/shared","title":"static let shared: IndoorModule","type":"property"},{"path":"\/documentation\/indoorsdk\/indoormodule\/start(_:)","title":"func start(Bool)","type":"method"},{"path":"\/documentation\/indoorsdk\/indoormodule\/requestairportsinfofromicaos(_:)","title":"func requestAirportsInfoFromIcaos([String])","type":"method"},{"title":"Utils","type":"groupMarker"},{"path":"\/documentation\/indoorsdk\/indoormodule\/getuserposition()","title":"func getUserPosition() -> [String : Any]?","type":"method"},{"children":[{"title":"Type Properties","type":"groupMarker"},{"path":"\/documentation\/indoorsdk\/indoormodule\/positionkey\/accuracy","title":"static let accuracy: String","type":"property"},{"path":"\/documentation\/indoorsdk\/indoormodule\/positionkey\/bearing","title":"static let bearing: String","type":"property"},{"path":"\/documentation\/indoorsdk\/indoormodule\/positionkey\/buildingid","title":"static let buildingId: String","type":"property"},{"path":"\/documentation\/indoorsdk\/indoormodule\/positionkey\/floorid","title":"static let floorId: String","type":"property"},{"path":"\/documentation\/indoorsdk\/indoormodule\/positionkey\/isindoor","title":"static let isIndoor: String","type":"property"},{"path":"\/documentation\/indoorsdk\/indoormodule\/positionkey\/latitude","title":"static let latitude: String","type":"property"},{"path":"\/documentation\/indoorsdk\/indoormodule\/positionkey\/longitude","title":"static let longitude: String","type":"property"}],"path":"\/documentation\/indoorsdk\/indoormodule\/positionkey","title":"IndoorModule.PositionKey","type":"struct"},{"path":"\/documentation\/indoorsdk\/indoormodule\/setflight(_:)","title":"func setFlight([String : Any]?) throws","type":"method"},{"path":"\/documentation\/indoorsdk\/indoormodule\/loadcategory(_:inairport:innavcontroller:action:)","title":"func loadCategory(Int, inAirport: String, inNavController: UINavigationController, action: (([String]) -> Void)?) throws","type":"method"},{"path":"\/documentation\/indoorsdk\/indoormodule\/airportiscached(_:)","title":"func airportIsCached(String) -> Bool","type":"method"},{"path":"\/documentation\/indoorsdk\/indoormodule\/loadsaveparking(inairport:innavcontroller:action:)","title":"func loadSaveParking(inAirport: String, inNavController: UINavigationController, action: (([String]) -> Void)?) throws","type":"method"},{"title":"Share Location","type":"groupMarker"},{"path":"\/documentation\/indoorsdk\/indoormodule\/manageuseractivity(_:andpresentin:after:preparetopresent:)","title":"func manageUserActivity(NSUserActivity, andPresentIn: UINavigationController, after: [UIViewController], prepareToPresent: () -> ()) -> Bool","type":"method"},{"title":"Outdoor Navigation","type":"groupMarker"},{"path":"\/documentation\/indoorsdk\/indoormodule\/managenotificationresponse(_:andpresentin:after:preparetopresent:)","title":"func manageNotificationResponse(UNNotificationResponse, andPresentIn: UINavigationController, after: [UIViewController], prepareToPresent: () -> ()) -> Bool","type":"method"},{"title":"Geofence","type":"groupMarker"},{"children":[{"title":"Initializers","type":"groupMarker"},{"path":"\/documentation\/indoorsdk\/indoormodule\/usernotificationkind\/init(rawvalue:)","title":"init(rawValue: Int)","type":"init"},{"title":"Instance Properties","type":"groupMarker"},{"path":"\/documentation\/indoorsdk\/indoormodule\/usernotificationkind\/rawvalue","title":"let rawValue: Int","type":"property"},{"title":"Type Properties","type":"groupMarker"},{"path":"\/documentation\/indoorsdk\/indoormodule\/usernotificationkind\/all","title":"static let all: UserNotificationKind","type":"property"},{"path":"\/documentation\/indoorsdk\/indoormodule\/usernotificationkind\/commercial","title":"static let commercial: IndoorModule.UserNotificationKind","type":"property"},{"path":"\/documentation\/indoorsdk\/indoormodule\/usernotificationkind\/none","title":"static let none: UserNotificationKind","type":"property"},{"path":"\/documentation\/indoorsdk\/indoormodule\/usernotificationkind\/operational","title":"static let operational: IndoorModule.UserNotificationKind","type":"property"},{"path":"\/documentation\/indoorsdk\/indoormodule\/usernotificationkind\/thirdparties","title":"static let thirdParties: IndoorModule.UserNotificationKind","type":"property"},{"title":"Type Methods","type":"groupMarker"},{"path":"\/documentation\/indoorsdk\/indoormodule\/usernotificationkind\/currentvalue()","title":"static func currentValue() -> UserNotificationKind","type":"method"},{"title":"Default Implementations","type":"groupMarker"},{"children":[{"title":"Operators","type":"groupMarker"},{"path":"\/documentation\/indoorsdk\/indoormodule\/usernotificationkind\/!=(_:_:)","title":"static func != (Self, Self) -> Bool","type":"op"}],"path":"\/documentation\/indoorsdk\/indoormodule\/usernotificationkind\/equatable-implementations","title":"Equatable Implementations","type":"symbol"},{"children":[{"title":"Initializers","type":"groupMarker"},{"path":"\/documentation\/indoorsdk\/indoormodule\/usernotificationkind\/init()","title":"init()","type":"init"},{"title":"Instance Methods","type":"groupMarker"},{"path":"\/documentation\/indoorsdk\/indoormodule\/usernotificationkind\/contains(_:)","title":"func contains(Self) -> Bool","type":"method"},{"path":"\/documentation\/indoorsdk\/indoormodule\/usernotificationkind\/formintersection(_:)","title":"func formIntersection(Self)","type":"method"},{"path":"\/documentation\/indoorsdk\/indoormodule\/usernotificationkind\/formsymmetricdifference(_:)","title":"func formSymmetricDifference(Self)","type":"method"},{"path":"\/documentation\/indoorsdk\/indoormodule\/usernotificationkind\/formunion(_:)","title":"func formUnion(Self)","type":"method"},{"path":"\/documentation\/indoorsdk\/indoormodule\/usernotificationkind\/insert(_:)","title":"func insert(Self.Element) -> (inserted: Bool, memberAfterInsert: Self.Element)","type":"method"},{"path":"\/documentation\/indoorsdk\/indoormodule\/usernotificationkind\/intersection(_:)","title":"func intersection(Self) -> Self","type":"method"},{"path":"\/documentation\/indoorsdk\/indoormodule\/usernotificationkind\/remove(_:)","title":"func remove(Self.Element) -> Self.Element?","type":"method"},{"path":"\/documentation\/indoorsdk\/indoormodule\/usernotificationkind\/symmetricdifference(_:)","title":"func symmetricDifference(Self) -> Self","type":"method"},{"path":"\/documentation\/indoorsdk\/indoormodule\/usernotificationkind\/union(_:)","title":"func union(Self) -> Self","type":"method"},{"path":"\/documentation\/indoorsdk\/indoormodule\/usernotificationkind\/update(with:)","title":"func update(with: Self.Element) -> Self.Element?","type":"method"}],"path":"\/documentation\/indoorsdk\/indoormodule\/usernotificationkind\/optionset-implementations","title":"OptionSet Implementations","type":"symbol"},{"children":[{"title":"Initializers","type":"groupMarker"},{"path":"\/documentation\/indoorsdk\/indoormodule\/usernotificationkind\/init(_:)","title":"init<S>(S)","type":"init"},{"path":"\/documentation\/indoorsdk\/indoormodule\/usernotificationkind\/init(arrayliteral:)","title":"init(arrayLiteral: Self.Element...)","type":"init"},{"title":"Instance Properties","type":"groupMarker"},{"path":"\/documentation\/indoorsdk\/indoormodule\/usernotificationkind\/isempty","title":"var isEmpty: Bool","type":"property"},{"title":"Instance Methods","type":"groupMarker"},{"path":"\/documentation\/indoorsdk\/indoormodule\/usernotificationkind\/isdisjoint(with:)","title":"func isDisjoint(with: Self) -> Bool","type":"method"},{"path":"\/documentation\/indoorsdk\/indoormodule\/usernotificationkind\/isstrictsubset(of:)","title":"func isStrictSubset(of: Self) -> Bool","type":"method"},{"path":"\/documentation\/indoorsdk\/indoormodule\/usernotificationkind\/isstrictsuperset(of:)","title":"func isStrictSuperset(of: Self) -> Bool","type":"method"},{"path":"\/documentation\/indoorsdk\/indoormodule\/usernotificationkind\/issubset(of:)","title":"func isSubset(of: Self) -> Bool","type":"method"},{"path":"\/documentation\/indoorsdk\/indoormodule\/usernotificationkind\/issuperset(of:)","title":"func isSuperset(of: Self) -> Bool","type":"method"},{"path":"\/documentation\/indoorsdk\/indoormodule\/usernotificationkind\/subtract(_:)","title":"func subtract(Self)","type":"method"},{"path":"\/documentation\/indoorsdk\/indoormodule\/usernotificationkind\/subtracting(_:)","title":"func subtracting(Self) -> Self","type":"method"}],"path":"\/documentation\/indoorsdk\/indoormodule\/usernotificationkind\/setalgebra-implementations","title":"SetAlgebra Implementations","type":"symbol"}],"path":"\/documentation\/indoorsdk\/indoormodule\/usernotificationkind","title":"IndoorModule.UserNotificationKind","type":"struct"},{"path":"\/documentation\/indoorsdk\/indoormodule\/useractivenotifications(_:)","title":"func userActiveNotifications(UserNotificationKind)","type":"method"},{"children":[{"title":"Initializers","type":"groupMarker"},{"path":"\/documentation\/indoorsdk\/indoormodule\/geofencenew\/init(name:message:category:icao:idpoi:)","title":"init(name: String, message: String, category: UserNotificationKind, icao: String, idPoi: String?)","type":"init"},{"title":"Instance Properties","type":"groupMarker"},{"path":"\/documentation\/indoorsdk\/indoormodule\/geofencenew\/category","title":"let category: UserNotificationKind","type":"property"},{"path":"\/documentation\/indoorsdk\/indoormodule\/geofencenew\/icao","title":"let icao: String","type":"property"},{"path":"\/documentation\/indoorsdk\/indoormodule\/geofencenew\/idpoi","title":"let idPoi: String?","type":"property"},{"path":"\/documentation\/indoorsdk\/indoormodule\/geofencenew\/message","title":"let message: String","type":"property"},{"path":"\/documentation\/indoorsdk\/indoormodule\/geofencenew\/name","title":"let name: String","type":"property"}],"path":"\/documentation\/indoorsdk\/indoormodule\/geofencenew","title":"IndoorModule.GeofenceNew","type":"struct"},{"path":"\/documentation\/indoorsdk\/indoormodule\/enteringeofenceaction","title":"var enterInGeofenceAction: ((GeofenceNew) -> Bool)?","type":"property"},{"title":"Info","type":"groupMarker"},{"path":"\/documentation\/indoorsdk\/indoormodule\/build","title":"var build: String","type":"property"},{"path":"\/documentation\/indoorsdk\/indoormodule\/version","title":"var version: String","type":"property"},{"title":"Deprecated","type":"groupMarker"},{"path":"\/documentation\/indoorsdk\/indoormodule\/action","title":"var action: (() -> Void)?","type":"property"},{"path":"\/documentation\/indoorsdk\/indoormodule\/getposition()","title":"func getPosition() -> Any?","type":"method"},{"path":"\/documentation\/indoorsdk\/indoormodule\/setflightinfo(_:)","title":"func setFlightInfo([String : Any])","type":"method"},{"path":"\/documentation\/indoorsdk\/indoormodule\/setpmr(_:)","title":"func setPMR(Bool)","type":"method"},{"title":"Instance Methods","type":"groupMarker"},{"path":"\/documentation\/indoorsdk\/indoormodule\/isindoorresponse(_:)","title":"func isIndoorResponse(UNNotificationResponse) -> Bool","type":"method"},{"title":"Type Properties","type":"groupMarker"},{"path":"\/documentation\/indoorsdk\/indoormodule\/searchselectpoinotification","title":"static let SearchSelectPoiNotification: Notification.Name","type":"property"}],"path":"\/documentation\/indoorsdk\/indoormodule","title":"IndoorModule","type":"class"},{"children":[{"title":"Instance Methods","type":"groupMarker"},{"path":"\/documentation\/indoorsdk\/indoormapviewcontroller\/loadairport(icao:)","title":"func loadAirport(icao: String)","type":"method"},{"path":"\/documentation\/indoorsdk\/indoormapviewcontroller\/loadpoi(idpoi:inairport:readyblock:)","title":"func loadPoi(idPoi: Int64, inAirport: String, readyBlock: (_ success: Bool, _ err: Error?) -> Void) -> Bool","type":"method"},{"path":"\/documentation\/indoorsdk\/indoormapviewcontroller\/openpoi(idpoi:)","title":"func openPoi(idPoi: Int64) throws","type":"method"},{"title":"Override Methods","type":"groupMarker"},{"path":"\/documentation\/indoorsdk\/indoormapviewcontroller\/loadview()","title":"func loadView()","type":"method"},{"path":"\/documentation\/indoorsdk\/indoormapviewcontroller\/viewdidload()","title":"func viewDidLoad()","type":"method"},{"path":"\/documentation\/indoorsdk\/indoormapviewcontroller\/viewwillappear(_:)","title":"func viewWillAppear(Bool)","type":"method"},{"path":"\/documentation\/indoorsdk\/indoormapviewcontroller\/viewdidappear(_:)","title":"func viewDidAppear(Bool)","type":"method"},{"path":"\/documentation\/indoorsdk\/indoormapviewcontroller\/viewwilldisappear(_:)","title":"func viewWillDisappear(Bool)","type":"method"},{"path":"\/documentation\/indoorsdk\/indoormapviewcontroller\/accessibilityperformescape()","title":"func accessibilityPerformEscape() -> Bool","type":"method"},{"path":"\/documentation\/indoorsdk\/indoormapviewcontroller\/traitcollectiondidchange(_:)","title":"func traitCollectionDidChange(UITraitCollection?)","type":"method"},{"title":"Instance Methods","type":"groupMarker"},{"path":"\/documentation\/indoorsdk\/indoormapviewcontroller\/didmove(toparent:)","title":"func didMove(toParent: UIViewController?)","type":"method"},{"path":"\/documentation\/indoorsdk\/indoormapviewcontroller\/loadcarpark(_:)","title":"func loadCarPark(Carpark)","type":"method"}],"path":"\/documentation\/indoorsdk\/indoormapviewcontroller","title":"IndoorMapViewController","type":"class"},{"title":"Variables","type":"groupMarker"},{"path":"\/documentation\/indoorsdk\/indoorsdkpositionkeyaccuracy","title":"let IndoorSDKPositionKeyAccuracy: String","type":"var"},{"path":"\/documentation\/indoorsdk\/indoorsdkpositionkeybearing","title":"let IndoorSDKPositionKeyBearing: String","type":"var"},{"path":"\/documentation\/indoorsdk\/indoorsdkpositionkeybuildingid","title":"let IndoorSDKPositionKeyBuildingId: String","type":"var"},{"path":"\/documentation\/indoorsdk\/indoorsdkpositionkeyfloorid","title":"let IndoorSDKPositionKeyFloorId: String","type":"var"},{"path":"\/documentation\/indoorsdk\/indoorsdkpositionkeyisindoor","title":"let IndoorSDKPositionKeyIsIndoor: String","type":"var"},{"path":"\/documentation\/indoorsdk\/indoorsdkpositionkeylatitude","title":"let IndoorSDKPositionKeyLatitude: String","type":"var"},{"path":"\/documentation\/indoorsdk\/indoorsdkpositionkeylongitude","title":"let IndoorSDKPositionKeyLongitude: String","type":"var"},{"title":"Enumerations","type":"groupMarker"},{"children":[{"title":"Enumeration Cases","type":"groupMarker"},{"path":"\/documentation\/indoorsdk\/airportsdbcache\/added(_:)","title":"case added(String)","type":"case"},{"path":"\/documentation\/indoorsdk\/airportsdbcache\/delete(_:)","title":"case delete(String)","type":"case"},{"title":"Type Properties","type":"groupMarker"},{"path":"\/documentation\/indoorsdk\/airportsdbcache\/changed","title":"static let changed: Notification.Name","type":"property"}],"path":"\/documentation\/indoorsdk\/airportsdbcache","title":"AirportsDBCache","type":"enum"},{"children":[{"title":"Enumeration Cases","type":"groupMarker"},{"path":"\/documentation\/indoorsdk\/createflighterror\/airportdestiny","title":"case airportDestiny","type":"case"},{"path":"\/documentation\/indoorsdk\/createflighterror\/airportorigin","title":"case airportOrigin","type":"case"},{"path":"\/documentation\/indoorsdk\/createflighterror\/companycode","title":"case companyCode","type":"case"},{"path":"\/documentation\/indoorsdk\/createflighterror\/icaoairportdestiny","title":"case icaoAirportDestiny","type":"case"},{"path":"\/documentation\/indoorsdk\/createflighterror\/icaoairportorigin","title":"case icaoAirportOrigin","type":"case"},{"path":"\/documentation\/indoorsdk\/createflighterror\/nameairportdestiny","title":"case nameAirportDestiny","type":"case"},{"path":"\/documentation\/indoorsdk\/createflighterror\/nameairportorigin","title":"case nameAirportOrigin","type":"case"},{"path":"\/documentation\/indoorsdk\/createflighterror\/numberflight","title":"case numberFlight","type":"case"},{"path":"\/documentation\/indoorsdk\/createflighterror\/state","title":"case state","type":"case"},{"title":"Initializers","type":"groupMarker"},{"path":"\/documentation\/indoorsdk\/createflighterror\/init(rawvalue:)","title":"init?(rawValue: Int)","type":"init"},{"title":"Instance Properties","type":"groupMarker"},{"path":"\/documentation\/indoorsdk\/createflighterror\/localizeddescription-5xfj7","title":"var localizedDescription: String","type":"property"},{"title":"Default Implementations","type":"groupMarker"},{"children":[{"title":"Operators","type":"groupMarker"},{"path":"\/documentation\/indoorsdk\/createflighterror\/!=(_:_:)","title":"static func != (Self, Self) -> Bool","type":"op"}],"path":"\/documentation\/indoorsdk\/createflighterror\/equatable-implementations","title":"Equatable Implementations","type":"symbol"},{"children":[{"title":"Instance Properties","type":"groupMarker"},{"path":"\/documentation\/indoorsdk\/createflighterror\/localizeddescription-1sphl","title":"var localizedDescription: String","type":"property"}],"path":"\/documentation\/indoorsdk\/createflighterror\/error-implementations","title":"Error Implementations","type":"symbol"},{"children":[{"title":"Instance Properties","type":"groupMarker"},{"path":"\/documentation\/indoorsdk\/createflighterror\/hashvalue","title":"var hashValue: Int","type":"property"}],"path":"\/documentation\/indoorsdk\/createflighterror\/rawrepresentable-implementations","title":"RawRepresentable Implementations","type":"symbol"}],"path":"\/documentation\/indoorsdk\/createflighterror","title":"CreateFlightError","type":"enum"},{"children":[{"title":"Enumeration Cases","type":"groupMarker"},{"path":"\/documentation\/indoorsdk\/flightticketstate\/close","title":"case close","type":"case"},{"path":"\/documentation\/indoorsdk\/flightticketstate\/open","title":"case open","type":"case"},{"title":"Type Properties","type":"groupMarker"},{"path":"\/documentation\/indoorsdk\/flightticketstate\/changed","title":"static let changed: Notification.Name","type":"property"},{"title":"Default Implementations","type":"groupMarker"},{"children":[{"title":"Operators","type":"groupMarker"},{"path":"\/documentation\/indoorsdk\/flightticketstate\/!=(_:_:)","title":"static func != (Self, Self) -> Bool","type":"op"}],"path":"\/documentation\/indoorsdk\/flightticketstate\/equatable-implementations","title":"Equatable Implementations","type":"symbol"}],"path":"\/documentation\/indoorsdk\/flightticketstate","title":"FlightTicketState","type":"enum"},{"children":[{"title":"Enumeration Cases","type":"groupMarker"},{"path":"\/documentation\/indoorsdk\/opencategorylisterror\/airportisnotready","title":"case AirportIsNotReady","type":"case"},{"path":"\/documentation\/indoorsdk\/opencategorylisterror\/categorydonotexist","title":"case CategoryDoNotExist","type":"case"},{"title":"Initializers","type":"groupMarker"},{"path":"\/documentation\/indoorsdk\/opencategorylisterror\/init(rawvalue:)","title":"init?(rawValue: Int)","type":"init"},{"title":"Instance Properties","type":"groupMarker"},{"path":"\/documentation\/indoorsdk\/opencategorylisterror\/localizeddescription-6df3d","title":"var localizedDescription: String","type":"property"},{"title":"Default Implementations","type":"groupMarker"},{"children":[{"title":"Operators","type":"groupMarker"},{"path":"\/documentation\/indoorsdk\/opencategorylisterror\/!=(_:_:)","title":"static func != (Self, Self) -> Bool","type":"op"}],"path":"\/documentation\/indoorsdk\/opencategorylisterror\/equatable-implementations","title":"Equatable Implementations","type":"symbol"},{"children":[{"title":"Instance Properties","type":"groupMarker"},{"path":"\/documentation\/indoorsdk\/opencategorylisterror\/localizeddescription-ikg5","title":"var localizedDescription: String","type":"property"}],"path":"\/documentation\/indoorsdk\/opencategorylisterror\/error-implementations","title":"Error Implementations","type":"symbol"},{"children":[{"title":"Instance Properties","type":"groupMarker"},{"path":"\/documentation\/indoorsdk\/opencategorylisterror\/hashvalue","title":"var hashValue: Int","type":"property"}],"path":"\/documentation\/indoorsdk\/opencategorylisterror\/rawrepresentable-implementations","title":"RawRepresentable Implementations","type":"symbol"}],"path":"\/documentation\/indoorsdk\/opencategorylisterror","title":"OpenCategoryListError","type":"enum"},{"children":[{"title":"Enumeration Cases","type":"groupMarker"},{"path":"\/documentation\/indoorsdk\/openpoierror\/poicantbereach","title":"case PoiCantBeReach","type":"case"},{"path":"\/documentation\/indoorsdk\/openpoierror\/poidontexist","title":"case PoiDontExist","type":"case"},{"title":"Initializers","type":"groupMarker"},{"path":"\/documentation\/indoorsdk\/openpoierror\/init(rawvalue:)","title":"init?(rawValue: Int)","type":"init"},{"title":"Default Implementations","type":"groupMarker"},{"children":[{"title":"Operators","type":"groupMarker"},{"path":"\/documentation\/indoorsdk\/openpoierror\/!=(_:_:)","title":"static func != (Self, Self) -> Bool","type":"op"}],"path":"\/documentation\/indoorsdk\/openpoierror\/equatable-implementations","title":"Equatable Implementations","type":"symbol"},{"children":[{"title":"Instance Properties","type":"groupMarker"},{"path":"\/documentation\/indoorsdk\/openpoierror\/localizeddescription","title":"var localizedDescription: String","type":"property"}],"path":"\/documentation\/indoorsdk\/openpoierror\/error-implementations","title":"Error Implementations","type":"symbol"},{"children":[{"title":"Instance Properties","type":"groupMarker"},{"path":"\/documentation\/indoorsdk\/openpoierror\/hashvalue","title":"var hashValue: Int","type":"property"}],"path":"\/documentation\/indoorsdk\/openpoierror\/rawrepresentable-implementations","title":"RawRepresentable Implementations","type":"symbol"}],"path":"\/documentation\/indoorsdk\/openpoierror","title":"OpenPoiError","type":"enum"}],"path":"\/documentation\/indoorsdk","title":"IndoorSDK","type":"module"}]},"schemaVersion":{"major":0,"minor":1,"patch":0}}